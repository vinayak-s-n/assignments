{"version":3,"sources":["Components/Keypad.js","Components/Display.js","Components/Calculator.js","App.js","index.js"],"names":["Keypad","_ref","functions","react_default","a","createElement","className","onClick","clearDis","changeSign","percentage","operation","enterNum","dotNum","equalise","Display","display","previous","symbol","present","Calculator","Components_Display","Components_Keypad","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","event","pres","toString","append","target","innerHTML","checkDis2","setState","includes","answer","prev","parseFloat","checkDis1","currentSymbol","currentOpeartion","str1","str","length","document","querySelector","style","fontSize","Components_Calculator","Component","ReactDOM","render","StrictMode","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.1ed68c8d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\nconst Keypad = ({ functions }) => {\r\n  return (\r\n    <div className=\"keypad\">\r\n      <div className=\"row row-1\">\r\n        <div className=\"span secondary\" onClick={functions.clearDis}>\r\n          AC\r\n        </div>\r\n        <div className=\"span operation\" onClick={functions.changeSign}>\r\n          +/-\r\n        </div>\r\n        <div className=\"span operation\" onClick={functions.percentage}>\r\n          %\r\n        </div>\r\n        <div className=\"span operation\" onClick={functions.operation}>\r\n          รท\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-2\">\r\n        <div className=\"span\" onClick={functions.enterNum}>\r\n          7\r\n        </div>\r\n        <div className=\"span\" onClick={functions.enterNum}>\r\n          8\r\n        </div>\r\n        <div className=\"span\" onClick={functions.enterNum}>\r\n          9\r\n        </div>\r\n        <div className=\"span operation\" onClick={functions.operation}>\r\n          x\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-3\">\r\n        <div className=\"span\" onClick={functions.enterNum}>\r\n          4\r\n        </div>\r\n        <div className=\"span\" onClick={functions.enterNum}>\r\n          5\r\n        </div>\r\n        <div className=\"span\" onClick={functions.enterNum}>\r\n          6\r\n        </div>\r\n        <div className=\"span operation\" onClick={functions.operation}>\r\n          -\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-4\">\r\n        <div className=\"span\" onClick={functions.enterNum}>\r\n          1\r\n        </div>\r\n        <div className=\"span\" onClick={functions.enterNum}>\r\n          2\r\n        </div>\r\n        <div className=\"span\" onClick={functions.enterNum}>\r\n          3\r\n        </div>\r\n        <div className=\"span operation\" onClick={functions.operation}>\r\n          +\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-5\">\r\n        <div className=\"double-span\" onClick={functions.enterNum}>\r\n          0\r\n        </div>\r\n        <div className=\"span secondary\" onClick={functions.dotNum}>\r\n          .\r\n        </div>\r\n        <div className=\"span equal\" onClick={functions.equalise}>\r\n          =\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Keypad;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nconst Display = ({ display }) => {\r\n  return (\r\n    <div className=\"display\">\r\n      <div className=\"operation-div\">\r\n        {display.previous}\r\n        {display.symbol}\r\n      </div>\r\n      <div className=\"result-div\">{display.present}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\n// Components\r\nimport Keypad from \"../Components/Keypad\";\r\nimport Display from \"../Components/Display\";\r\nconst Calculator = ({ display, functions }) => {\r\n  return (\r\n    <div className=\"calculator-container\">\r\n      <Display display={display} />\r\n      <Keypad functions={functions} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\n// Copmonents\nimport Calculator from \"./Components/Calculator\";\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      display: { previous: \"\", present: \"\", symbol: \"\" },\n      functions: {\n        // function to enter numbers\n        enterNum: (event) => {\n          let pres = this.state.display.present.toString();\n          let append = pres + event.target.innerHTML.toString();\n          this.state.functions.checkDis2(pres);\n          this.setState({\n            display: {\n              previous: this.state.display.previous.toString(),\n              present: append,\n              symbol: this.state.display.symbol,\n            },\n          });\n        },\n        // functon to add a .\n        dotNum: (event) => {\n          let pres = this.state.display.present.toString();\n          let append = pres + event.target.innerHTML.toString();\n          if (pres === \".\" || pres.includes(\".\")) {\n            return;\n          }\n          this.setState({\n            display: {\n              previous: this.state.display.previous.toString(),\n              present: append,\n              symbol: this.state.display.symbol,\n            },\n          });\n        },\n\n        // function to clear out display\n        clearDis: () => {\n          this.setState({\n            display: {\n              previous: \"\",\n              present: \"\",\n              symbol: \"\",\n            },\n          });\n        },\n        // percentage function\n\n        percentage: () => {\n          let answer = \"\";\n          let prev = this.state.display.previous.toString();\n          let pres = this.state.display.present.toString();\n          if (pres === \"\") {\n            return;\n          }\n          if (prev === \"\" && pres !== \"\") {\n            answer = parseFloat(pres) / 100;\n          } else {\n            answer = (parseFloat(pres) / 100) * 100 + parseFloat(prev);\n          }\n\n          this.state.functions.checkDis1(answer);\n\n          this.setState({\n            display: {\n              previous: \"\",\n              present: answer,\n              symbol: \"\",\n            },\n          });\n        },\n        // Operations functions\n        operation: (event) => {\n          let currentSymbol = event.target.innerHTML;\n          let prev = this.state.display.previous.toString();\n          let pres = this.state.display.present.toString();\n\n          if (this.state.display.present.toString() === \"\") {\n            return;\n          }\n\n          if (prev === \"\") {\n            let append = pres;\n            this.state.functions.checkDis1(append);\n            this.setState({\n              display: {\n                previous: append,\n                present: \"\",\n                symbol: event.target.innerHTML.toString(),\n              },\n            });\n          } else {\n            let answer = \"\";\n            let prev = parseFloat(this.state.display.previous);\n            let pres = parseFloat(this.state.display.present);\n            let currentOpeartion = this.state.display.symbol;\n\n            if (currentOpeartion === \"+\") {\n              answer = prev + pres;\n            } else if (currentOpeartion === \"-\") {\n              answer = prev - pres;\n            } else if (currentOpeartion === \"รท\") {\n              if (pres === 0) {\n                answer = \"cannot divide by zero\";\n              } else {\n                answer = prev / pres;\n              }\n            } else if (currentOpeartion === \"x\") {\n              answer = prev * pres;\n            }\n\n            this.state.functions.checkDis1(answer);\n            answer = answer.toString();\n            this.setState({\n              display: {\n                previous: answer,\n                present: \"\",\n                symbol: currentSymbol,\n              },\n            });\n          }\n        },\n\n        // function to change signs\n\n        changeSign: () => {\n          if (this.state.display.present === \"\") {\n            return;\n          }\n          let pres = parseFloat(this.state.display.present.toString());\n\n          // let prev = parseFloat(this.state.display.previous.toString());\n          this.setState({\n            display: {\n              previous: this.state.display.previous.toString(),\n              present: pres * -1,\n              symbol: this.state.display.symbol,\n            },\n          });\n        },\n\n        equalise: () => {\n          let answer = \"\";\n\n          if (\n            this.state.display.present.toString() === \"\" &&\n            this.state.display.previous.toString() !== \"\"\n          ) {\n            return;\n          }\n          let prev = parseFloat(this.state.display.previous);\n          let pres = parseFloat(this.state.display.present);\n          let currentOpeartion = this.state.display.symbol;\n\n          if (currentOpeartion === \"+\") {\n            answer = prev + pres;\n          } else if (currentOpeartion === \"-\") {\n            answer = prev - pres;\n          } else if (currentOpeartion === \"รท\") {\n            if (pres === 0) {\n              answer = \"Cannot divide by zero\";\n            } else {\n              answer = prev / pres;\n            }\n          } else if (currentOpeartion === \"x\") {\n            answer = prev * pres;\n          }\n          answer = answer.toString();\n          this.state.functions.checkDis2(answer);\n          this.setState({\n            display: {\n              previous: \"\",\n              present: answer,\n              symbol: \"\",\n            },\n          });\n        },\n\n        checkDis1: (str1) => {\n          let str = str1.toString();\n          if (str.length > 19 && str.length <= 25) {\n            document.querySelector(\".operation-div\").style.fontSize = \"1rem\";\n          } else if (str.length > 25) {\n            document.querySelector(\".operation-div\").style.fontSize = \".7rem\";\n          } else {\n            document.querySelector(\".operation-div\").style.fontSize = \"1.5rem\";\n          }\n        },\n\n        checkDis2: (str1) => {\n          let str = str1.toString();\n          if (str.length > 14 && str.length <= 25) {\n            document.querySelector(\".result-div\").style.fontSize = \"1rem\";\n          } else if (str.length > 25) {\n            document.querySelector(\".result-div\").style.fontSize = \".8rem\";\n          } else {\n            document.querySelector(\".result-div\").style.fontSize = \"2rem\";\n          }\n        },\n      },\n    };\n  }\n\n  // function to render numbers when buttons clicked\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Calculator\n          display={this.state.display}\n          functions={this.state.functions}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}